name: Pipeline
on:
  push:
    branches:
      - master
  pull_request:
  # trigger only for master and PR, commits to branches will be ignored
  # if you wan't to trigger ci/cd for branch then just create PR

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write   

jobs:
  test:
    runs-on: ubuntu-22.04 # https://github.com/actions/runner-images#available-images
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.7.0
          cache: "yarn"
      - name: rm 
        run: rm -rf build/* && echo 'test..' > build/log.log
      # - name: Prepare .env
      #   run: cp .env.ci .env
      # - name: Yarn install
      #   run: yarn
      # - name: Build
      #   run: /bin/bash build.sh
      # - name: run local server (NODE_ENV=production)
      #   run: |
      #     /bin/bash ci_server.sh &
      # - name: servers healthchecks
      #   run: |
      #     TIMEOUT="2000" node .github/healtcheck.js
      # # - name: test cli (using routes endpoint)
      # #   run: |
      # #     /bin/bash console.sh routes
      # # - name: UNIT TESTS
      # #   run: |
      # #     TYPE=unit /bin/bash jest.sh
      # # - name: INT TESTS
      # #   run: |
      # #     TYPE=int /bin/bash jest.sh
      # - name: E2E TESTS
      #   run: |
      #     /bin/bash playwright.sh --target docker
      # - name: kill servers
      #   run: |
      #     /bin/bash .github/stop-server.sh

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2          
